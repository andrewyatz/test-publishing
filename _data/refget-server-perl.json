[{"server": "https://refget.herokuapp.com/", "date_time": "2024-12-31 02:53:18.158358", "test_results": [{"name": "test_info_implement", "result": -1, "test_description": "Test to check if info-endpoint returns 200 OK with appropriate headers", "text": "Info endpoint not implemented by the server", "parents": ["test_base_algorithm"], "children": ["test_info_implement_default", "test_info_circular", "test_info_algorithms", "test_info_subsequence", "test_info_api_version"], "warning": true, "edge_cases": []}, {"name": "test_info_implement_default", "result": 0, "test_description": "Test to check if info-endpoint returns 200 OK without headers", "text": "test_info_implement_default is skipped because Info endpoint not implemented by the server", "parents": ["test_info_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_info_circular", "result": 0, "test_description": "Test to check if info-endpoint has circular in the response object. And if it is there it updates session_params['circular'] as per the value", "text": "test_info_circular is skipped because Info endpoint not implemented by the server", "parents": ["test_info_implement"], "children": ["test_metadata_query_circular_sequence", "test_sequence_circular", "test_sequence_circular_support_false_errors", "test_sequence_circular_support_true_errors"], "warning": true, "edge_cases": []}, {"name": "test_metadata_query_circular_sequence", "result": 0, "test_description": "Test if metadata endpoint returns 200 using circular test sequence if the server supports circular sequences. Value stored in session_params. If not skip test and set skip text appropriately", "text": "test_metadata_query_circular_sequence is skipped because Metadata endpoint not implemented by the servertest_info_circular is skipped because Info endpoint not implemented by the server", "parents": ["test_metadata_implement", "test_info_circular"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_circular", "result": 0, "test_description": "Test to check if server passes all the edge cases related to circular queries", "text": "test_sequence_circular is skipped because Sequence endpoint not implemented in the servertest_info_circular is skipped because Info endpoint not implemented by the server", "parents": ["test_sequence_implement", "test_info_circular"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_circular_support_false_errors", "result": 0, "test_description": "Test to check if server throws correct error codes on circular sequence query if server does not support circular sequences", "text": "test_sequence_circular_support_false_errors is skipped because Sequence endpoint not implemented in the servertest_info_circular is skipped because Info endpoint not implemented by the server", "parents": ["test_sequence_implement", "test_info_circular"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_circular_support_true_errors", "result": 0, "test_description": "Test to check if server throws correct error codes on circular sequence query if server supports circular sequences", "text": "test_sequence_circular_support_true_errors is skipped because Sequence endpoint not implemented in the servertest_info_circular is skipped because Info endpoint not implemented by the server", "parents": ["test_sequence_implement", "test_info_circular"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_info_algorithms", "result": 0, "test_description": "Test to check if info-endpoint has algorithms in the response object. And if it is there it updates session_params['trunc512'] as per the value", "text": "test_info_algorithms is skipped because Info endpoint not implemented by the server", "parents": ["test_info_implement"], "children": ["test_metadata_query_by_trunc512", "test_metadata_trunc512", "test_sequence_query_by_trunc512"], "warning": true, "edge_cases": []}, {"name": "test_metadata_query_by_trunc512", "result": 0, "test_description": "Test if metadata endpoint returns 200 using trunc512 with I test sequence if the server supports. Value stored in session_params. If not skip test and set skip text appropriately", "text": "test_metadata_query_by_trunc512 is skipped because Metadata endpoint not implemented by the servertest_info_algorithms is skipped because Info endpoint not implemented by the server", "parents": ["test_metadata_implement", "test_info_algorithms"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_trunc512", "result": 0, "test_description": "Test if trunc512 in metadata response object. Skip if server does not support trunc512", "text": "test_metadata_trunc512 is skipped because Metadata endpoint not implemented by the servertest_info_algorithms is skipped because Info endpoint not implemented by the server", "parents": ["test_metadata_implement", "test_info_algorithms"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_query_by_trunc512", "result": 0, "test_description": "Test to check if server returns 200 using I test sequence trunc512 and appropriate headers if the server supports trunc512", "text": "test_sequence_query_by_trunc512 is skipped because Sequence endpoint not implemented in the servertest_info_algorithms is skipped because Info endpoint not implemented by the server", "parents": ["test_sequence_implement", "test_info_algorithms"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_info_subsequence", "result": 0, "test_description": "Test to check if info-endpoint has subsequence_limit in the response object. If the key is present we update session_params['subsequence_limit'] as per the value", "text": "test_info_subsequence is skipped because Info endpoint not implemented by the server", "parents": ["test_info_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_info_api_version", "result": 0, "test_description": "Test to check if info-endpoint has supported_api_versions in the response object.", "text": "test_info_api_version is skipped because Info endpoint not implemented by the server", "parents": ["test_info_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_implement", "result": -1, "test_description": "Test if metadata endpoint returns 200 with appropriate headers using I test sequence", "text": "Metadata endpoint not implemented by the server", "parents": ["test_base_algorithm"], "children": ["test_metadata_implement_default", "test_metadata_query_by_trunc512", "test_metadata_query_circular_sequence", "test_metadata_md5", "test_metadata_trunc512", "test_metadata_length", "test_metadata_aliases", "test_metadata_invalid_checksum_404_error", "test_metadata_invalid_encoding_406_error"], "warning": true, "edge_cases": []}, {"name": "test_metadata_implement_default", "result": 0, "test_description": "Test if metadata endpoint returns 200 without headers using I test sequence", "text": "test_metadata_implement_default is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_md5", "result": 0, "test_description": "Test if md5 in metadata response object", "text": "test_metadata_md5 is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_length", "result": 0, "test_description": "Test if length in metadata response object", "text": "test_metadata_length is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_aliases", "result": 0, "test_description": "Test if aliases in metadata response object", "text": "test_metadata_aliases is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_invalid_checksum_404_error", "result": 0, "test_description": "Test if 404 on invalid checksum in metadata response", "text": "test_metadata_invalid_checksum_404_error is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_metadata_invalid_encoding_406_error", "result": 0, "test_description": "Test if 406 on invalid encoding in Accept header", "text": "test_metadata_invalid_encoding_406_error is skipped because Metadata endpoint not implemented by the server", "parents": ["test_metadata_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_implement", "result": -1, "test_description": "Test to check if server returns 200 using I test sequence and appropriate headers", "text": "Sequence endpoint not implemented in the server", "parents": ["test_base_algorithm"], "children": ["test_sequence_implement_default", "test_sequence_start_end", "test_sequence_range", "test_sequence_query_by_trunc512", "test_sequence_invalid_checksum_404_error", "test_sequence_invalid_encoding_406_error", "test_sequence_circular", "test_sequence_circular_support_false_errors", "test_sequence_circular_support_true_errors"], "warning": true, "edge_cases": []}, {"name": "test_sequence_implement_default", "result": 0, "test_description": "Test to check if server returns 200 using I test sequence and no headers", "text": "test_sequence_implement_default is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_start_end", "result": 0, "test_description": "Test to check if server returns 200 and appropriate text using I test sequence and start/end query params set to 10 and 20 respectively", "text": "test_sequence_start_end is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_implement"], "children": ["test_sequence_start_end_success_cases", "test_sequence_start_end_errors"], "warning": true, "edge_cases": []}, {"name": "test_sequence_start_end_success_cases", "result": 0, "test_description": "Test to check if server passes all the edge cases related to success queries using start/end params", "text": "test_sequence_start_end_success_cases is skipped because test_sequence_start_end is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_start_end"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_start_end_errors", "result": 0, "test_description": "Test to check if server passes all the edge cases related start-end error cases", "text": "test_sequence_start_end_errors is skipped because test_sequence_start_end is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_start_end"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_range", "result": 0, "test_description": "Test to check if server returns 200 and appropriate text using I test sequence and range header set to 10 and 19 respectively", "text": "test_sequence_range is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_implement"], "children": ["test_sequence_range_success_cases", "test_sequence_range_errors"], "warning": true, "edge_cases": []}, {"name": "test_sequence_range_success_cases", "result": 0, "test_description": "Test to check if server passes all the edge cases related to range header success queries", "text": "test_sequence_range_success_cases is skipped because test_sequence_range is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_range"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_range_errors", "result": 0, "test_description": "Test to check if server passes all the edge cases related range error cases", "text": "test_sequence_range_errors is skipped because test_sequence_range is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_range"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_invalid_checksum_404_error", "result": 0, "test_description": "Test to check if server returns 404 using some garbage checksum and appropriate headers", "text": "test_sequence_invalid_checksum_404_error is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_implement"], "children": [], "warning": true, "edge_cases": []}, {"name": "test_sequence_invalid_encoding_406_error", "result": 0, "test_description": "Test to check if server returns 200 using I test sequence and garbage encoding in Accept header", "text": "test_sequence_invalid_encoding_406_error is skipped because Sequence endpoint not implemented in the server", "parents": ["test_sequence_implement"], "children": [], "warning": true, "edge_cases": []}], "total_tests": 30, "total_tests_passed": 0, "total_tests_skipped": 27, "total_tests_failed": 3, "total_warnings": 30, "high_level_summary": {"test_info_implement": {"result": 0, "name": "test_info_implement"}, "test_metadata_implement": {"result": 0, "name": "test_metadata_implement"}, "test_sequence_implement": {"result": 0, "name": "test_sequence_implement"}, "test_sequence_range": {"result": 0, "name": "test_sequence_range"}}}]